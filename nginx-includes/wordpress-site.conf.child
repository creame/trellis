{% extends 'roles/wordpress-setup/templates/wordpress-site.conf.j2' %}

  {% block multisite_rewrites -%}
  rewrite ^/wp/?$ / permanent;

  {{ super() }}
  {% endblock -%}

  {% block location_uploads_php -%}
  {{ super() }}

  {% if image_optimize | default(false) -%}
  # Try to server WebP images (if exists)
  location ~* "^(?<path>.+)\.(png|jpg)$" {
    expires max;
    log_not_found off;
    access_log off;
    add_header Pragma public;
    add_header Cache-Control "public";

    try_files $path$webp_ext $path$file_ext =404;
  }
  {% endif -%}

  # Set max cache for static files
  location ~* .(?:ogg|ogv|svg|svgz|eot|otf|woff2?|mp4|ttf|css|rss|atom|js|jpg|jpeg|gif|png|webp|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf|cur)$ {
    expires max;
    log_not_found off;
    access_log off;
    add_header Pragma public;
    add_header Cache-Control "public";
  }

  # Disable XML-RPC
  location ~* xmlrpc\.php$ { return 444; }

  # Protect System Files
  location = /wp/wp-admin/install.php { deny all; }
  location ~ /wp/readme\.html$ { deny all; }
  location ~ /wp/readme\.txt$ { deny all; }
  location ~ /wp-config.php$ { deny all; }
  location ~ ^/wp/wp-admin/includes/ { deny all; }
  location ~ ^/wp/wp-includes/[^/]+\.php$ { deny all; }
  location ~ ^/wp/wp-includes/js/tinymce/langs/.+\.php$ { deny all; }
  location ~ ^/wp/wp-includes/theme-compat/ { deny all; }
  {% endblock %}

  {% block location_primary -%}
  # Based on Cache Enabler nginx config (https://www.keycdn.com/support/wordpress-cache-enabler-plugin#nginx)
  set $cache_uri $request_uri;

  # bypass cache if POST requests or URLs with a query string
  if ($request_method = POST) {
    set $cache_uri 'nocache';
  }

  # bypass cache if GET queries
  if ($query_string != "") {
    set $cache_uri 'nocache';
  }

  # bypass cache if URLs containing the following strings
  if ($request_uri ~* "{{ item.value.cache.skip_cache_uri | default(nginx_skip_cache_uri) }}") {
    set $cache_uri 'nocache';
  }

  # bypass cache if the cookies containing the following strings
  if ($http_cookie ~* "{{ item.value.cache.skip_cache_cookie | default(nginx_skip_cache_cookie) }}") {
    set $cache_uri 'nocache';
  }

  location / {
    gzip_static on;
    try_files '/app/cache/cache-enabler/${http_host}${cache_uri}index.html' $uri $uri/ /index.php?$args;
  }
  {% endblock %}
